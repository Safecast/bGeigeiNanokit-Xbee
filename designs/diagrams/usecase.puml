@startuml


:bGeigieUser: as user
:API service: as API<<secondairy>>
:Bluetooth: as BLU<<secondairy>>

rectangle bGeigieController {
    (Set bGeigie mode)
    (Set bGeigie\n logging mode)
    (Set bGeigie\n surface mode)
    (Report data)
    (Log data)

    (Log data) -u.> (Report data) : <<extend>>
    (Set bGeigie\n logging mode) -u-|> (Set bGeigie mode)
    (Set bGeigie\n surface mode) -u-|> (Set bGeigie mode)

    user -d- (Set bGeigie mode)
}


rectangle esp32Controller{
    (Set wifi settings)
    (Set esp mode)
    (Set esp\n mobile mode)
    (Set esp\n stationary mode)
    (Publish to API)
    (Publish over bluetooth)
    (Process data)

    (Report data) -d.> (Process data) : <<include>>

    (Publish to API) -u.> (Process data) : <<extend>>
    (Process data) -d.> (Publish over bluetooth) : <<include>>
    (Set esp\n mobile mode) -u-|> (Set esp mode)
    (Set esp\n stationary mode) -u-|> (Set esp mode)

    (Publish to API) -d- API
    (Publish over bluetooth) -d- BLU

    user -d- (Set esp mode)
    user -d- (Set wifi settings)
}

note top of (Set bGeigie mode)
  Logging mode (default)
  or surface mode
  - Using switch
endnote

note top of (Set wifi settings)
  - Using web interface
endnote

note top of (Set esp mode)
  Mobile mode (Just bluetooth)
  Stationary mode (Publish to API)
  - Using push button
endnote

@enduml
