@startuml


state Idle
state GetReading
GetReading : bGeigieConn.getReading()
state ReportReading {
    state InitBluetooth
    InitBluetooth: action: initBluetooth()
    state PublishToBluetooth
    PublishToBluetooth: action: bluetoothConnection.write(reading)
    state Connecting
    Connecting: entry: setWifiSettings
    Connecting: action: connectWifi
    state ConnectionTest
    ConnectionTest: action: testApiAvailable
    state PublishToApi
    PublishToApi: action: http.send(reading)
    state ReportComplete
    ReportComplete: action: callbackController(succes / not)

    [*] -> InitBluetooth
    InitBluetooth --> PublishToBluetooth : bluetoothInitialized
    PublishToBluetooth ---> ReportComplete : readingReportedBT
    PublishToBluetooth -> Connecting: [in(FixedMode)] readingReportedBT

    Connecting --> ConnectionTest : connected
    Connecting --> ReportComplete : connectionError
    ConnectionTest -> PublishToApi : APIAvailable
    ConnectionTest --> ReportComplete : apiUnavailable
    PublishToApi --> ReportComplete : apiPostFailed
    PublishToApi -> ReportComplete : readingReportedAPI

    ReportComplete --> [*]
}

[*] -> Idle
Idle -> GetReading : readingExpected
GetReading --> ReportReading : readingReceived
ReportReading -u-> Idle : readingReported


@enduml